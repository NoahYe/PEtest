z<-rep('sh',182)
z<-(rep('sz',118)+z)
z<-c(rep('sz',118),z)
z
x
y
stock_list <- paste(z,y,sep='')
stock_list
stock_url <- paste(stock_list,sep=',')
stock_url
paste(stock_url,collapes)
paste(stock_url,collapse)
paste(stock_url,collapse=',')
bass_address <- http://hq.sinajs.cn/list=
bass_address <- 'http://hq.sinajs.cn/list='
base_address <- 'http://hq.sinajs.cn/list='
base_address
url_address <- paste(base_address,paste(stock_url,collapse=','),sep='')
url_address
download.file(url, 'all.csv', quiet = TRUE)
download.file(url_address, 'all.csv', quiet = TRUE)
readLines(url_address, 'all.csv', quiet = TRUE)
readLines(url_address, 'all.csv')
readLines(con=url_address)
all_info <- readline(con = url_address)
url_address
all_info <- readline(con = url_address)
readline(con = url_address)
all_info <- readlines(con = url_address)
all_info <- readLines(con = url_address)
all_
View(all)
View(all_info)
all_info[1,1]
all_info[1,1]
all_info[,1]
all_info
all_info{1}
all_info[1]
all_info<-strsplit(all_info,split=',')
all_info
View(all_info)
stock_list[1]
current_price<-all_info[4,]
typeof(all_info)
class(all_info)
class(all_info[1])
current_price<-all_info[[,],4]
current_price<-all_info[[],4]
current_price<-all_info[][4]
current_price
current_price<-all_info[1:300][4]
current_price
View(temp_earning)
View(temp_earning)[1]
all_info[1]
all_info[2]
all_info[][1]
all_info[[]][]1
all_info[[]][1]
all_info[[1]]
all_info[[2]]
all_info[[1]][4]
all_info[[]][4]
sapply(all_info,function(x) x[[4]])
sapply(all_info, function(x))
sapply(all_info, function(x), x[[4]])
sapply(all_info, function(x) x[[4]])
stock_price <- sapply(all_info, function(x) x[[4]])
stock_price
stock_weight<-read.csv('000300closeweight.csv',header=T)
stock_weight<-stock_weight[,7]
stock_weight
nrow(stock_price)
lrow(stock_price)
ncol(stock_price)
range(stock_price)
length(stock_price)
length(stock_weight)
stock_index<-(stock_price*stock_weight)
stock_price <- as.double(stock_price)
stock_price
stock_index<-(stock_price*stock_weight)
stock_index
sum_index<-sum(stock_index)
sum_index
2*sum_index
whoAmI <- function(x, ...) UseMethod("")
whoAmI <- function(x, ...) UseMethod("wh")
whoAmI <- function(x, ...) UseMethod("whoAmI")
whoAmI.foo <- function(x) print('I am a foo')
a <- 1:2
a
class(a)
attr(a,'class')<-'foo'
class(a)
whoAmI(a)
whoAmI(b)
whoAmI(name)
install.packages('Rcurl')
install.packages('RCurl')
library(RCurl)
source('query_PE_test.r')
source('query_PE_test.r')
source('query_PE_test.r')
pretty(all_info)
pretty(all_info[[1]])
all_info[[1]]
require(ggplot2)
require('ggplot2')
install.packages('ggplot2')
require(ggplot2)
ls.objects()
.ls.objects()
.ls.objects <- function (pos = 1, pattern, order.by,
decreasing=FALSE, head=FALSE, n=5) {
napply <- function(names, fn) sapply(names, function(x)
fn(get(x, pos = pos)))
names <- ls(pos = pos, pattern = pattern)
obj.class <- napply(names, function(x) as.character(class(x))[1])
obj.mode <- napply(names, mode)
obj.type <- ifelse(is.na(obj.class), obj.mode, obj.class)
obj.size <- napply(names, object.size)
obj.dim <- t(napply(names, function(x)
as.numeric(dim(x))[1:2]))
vec <- is.na(obj.dim)[, 1] & (obj.type != "function")
obj.dim[vec, 1] <- napply(names, length)[vec]
out <- data.frame(obj.type, obj.size, obj.dim)
names(out) <- c("Type", "Size", "Rows", "Columns")
if (!missing(order.by))
out <- out[order(out[[order.by]], decreasing=decreasing), ]
if (head)
out <- head(out, n)
out
}
.ls.objects(order.by='Size')
.ls.objects(order.by='Size',decreasing=F)
Rprof()
summaryRprof()
re(all_info)
rm(all_info)
.ls.objects(order.by='Size',decreasing=F)
sleep
data(sleep,package='VIM')
sleep
complete.cases(sleep)
sleep[complete.cases(sleep),]
sleep[!complete.cases(sleep),]
nrow(sleep[!complete.cases(sleep),])
mean(sleep[!complete.cases(sleep),])
(sleep[!complete.cases(sleep),])
complete.cases(sleep)
mean(complete.case(sleep))
mean(complete.cases(sleep))
sum
(complete.cases(sleep))
sum(complete.cases(sleep))
is.na(sleep)
is.na(sleep$Dream)
mean(is.na(sleep$Dream))
library(mice)
data(sleep,package='VIM')
sleep
md.pattern(sleep)
aggr(sleep,prop=F,numbers=T)
library('VIM')
aggr(sleep,prop=F,numbers=T)
aggr(sleep,prop=F,numbers=F)
aggr(sleep,prop=F,numbers=T)
matrixplot(sleep)
matrixplot(sleep)
marginplot(sleep)
marginplot(sleep[c('Gest','Dream')],pch=c(20),col=c('darkgrey','red','blue'))
sleep
newdata<-na.omit(sleep)
newdata
newdata<-sleep[complete.cases(sleep),]
newdata
options(digits = 1)
cor(newdata)
source('query_PE_test.r')
result
result
source('query_PE_test.r')
filename<-paste('600000','.csv',sep='')
filename
stockID<-'600000'
stockID<-600000
source('query_PE_test.r')
filename
as.character.octmode(stockID)
stockID
as.character.octmode(stockID)
source('query_Stocks.r')
source('dataCleaning_stock.r')
missing_data
cat('There are totally',total_naNum[,'dataDate'],' NA value in PE for all stocks \n',sep='')
cat('There are ',sum(naStatus),' NA value in PE for the stock ',stockID,'\n',
'missing the data in',missing_data[,'dataDate'],'\n',sep='')
cat('There are ',sum(naStatus),' NA value in PE for the stock ',stockID,'\n',
'missing the data in ',paste(missing_data[,'dataDate'],sep=','),'\n',sep='')
paste(missing_data[,'dataDate'],sep=','
)
paste(missing_data[,'dataDate'],sep=' ')
paste(missing_data[,'dataDate'],sep='and')
paste(as.character(missing_data[,'dataDate']),sep=' ')
class(missing_data)
missing_data['dataDate']
paste(as.character(missing_data['dataDate']),sep=' ')
paste(missing_data['dataDate'],sep=' ')
cat('There are ',sum(naStatus),' NA value in PE for the stock ',stockID,'\n',
'missing the data in ',paste(as.character(missing_data['dataDate']),sep=' '),'\n',sep
)
cat('There are ',sum(naStatus),' NA value in PE for the stock ',stockID,'\n',
'missing the data in ',paste(as.character(missing_data['dataDate']),sep=' '),'\n',sep='')
source('dataCleaning_stock.r')
source('dataCleaning_stock.r')
name
source('dataCleaning_stock.r')
name
stock_list
stock_list <- read.csv(stock_list_file,header=T,stringsAsFactors=F,colClasses='character')[,1]
stock_list
source('dataCleaning_stock.r')
source('dataCleaning_stock.r')
source('dataCleaning_stock.r')
getwd()
setwd('C:\\Users\\Jianyu.Ye\\Documents\\GitHub\\PEtest')
getwd()
source('query_Stocks.r')
source('query_Stocks.r')
source('dataChecking_stock.r')
naStatus
View(naStatus)
naStatus[TRUE]
naStatus[TRUE,]
naStatus[,TRUE]
nsStatus <- subset(naStatus,True)
nsStatus <- subset(naStatus,T)
nsStatus
rm(nsStatus)
attach()
?attach()
which(naStatus)
which(naStatus)-1
stock_info_PE[which(naStatus),]<-stock_info_PE[which(naStatus)-1,]
count(is.na(stock_info_PE[,'PE']))
length(is.na(stock_info_PE[,'PE']))
naStatus <- is.na(stock_info_PE[,'PE'])
naStatus
stock_info_PE
source('dataChecking_stock.r')
stock_list <- 603288
stock_list <- '603288'
filename <- paste(getwd(),'/stock_info/',as.character(stockID),'.csv',sep='')
filename
stockID <- '603288'
filename <- paste(getwd(),'/stock_info/',as.character(stockID),'.csv',sep='')
filename
stock_info_PE <- read.csv(filename,header=T,stringsAsFactors=F)[,c('dataDate','PE')]
naStatus <- is.na(stock_info_PE[,'PE'])
naStatus
which(naStatus)
which(naStatus)-1
stock_info_PE[which(naStatus)-1]
stock_info_PE[which(naStatus)-1,]
naStatus
naStatus %in% stock_info_PE
stock_info_PE
stock_info_PE[,2]
pretty(stock_info_PE[,2])
barplot(stock_info_PE)
barplot(stock_info_PE[,2])
source('dataCleaning.r')
stock_info_PE[,2]
barplot(stock_info_PE[,2])
plot(stock_info_PE[,])
plot(stock_info_PE[,2])
plot(density(stock_info_PE[,2]))
source('dataChecking_stock.r')
source('dataCleaning.r')
source('dataChecking_stock.r')
dataCleaning.r
install.packages('quantmod')
library(quantmod)
getSymbols('YAHOO')
getSymbols('YHOO')
chartSeries(YHOO,theme=chartTheme('white'),TA=NULL)
chartSeries(YHOO,theme=chartTheme('black'),TA=NULL)
chartSeries(YHOO,theme=chartTheme('white'),TA=NULL)
addTA(OpCl(YHOO),col='blue',type='h')
chartSeries(YHOO,theme=chartTheme('white'),TA=NULL)
addTA(OpCl(YHOO),col='blue',type='h')
ibm=getYahooData('IBM',start=20120101)
ibm
View(ibm)
chartSeries(ibm[,'Open'],theme='white')
addBBands()
addRSI()
addMACD()
addBBands()
addCCI()
getSymbols('^GSPC')
Cl(GSPC)
dvi<-DVI(Cl(GSPC))
dvi
View(dvi)
sig<-ifelse(dvi$dvi<0.5,1,-1)
sig
View(dvi)
View(sig)
sig<-Lag(sig)
View(sig)
ret<-ROC(Cl(GSPC))*sig
View(ret)
table.Drawdowns(ret,top=10)
install.packages('PerformanceAnalytics')
table.Drawdowns(ret,top=10)
charts.PerformanceSummary(ret)
install.packages('quantstrat')
install.packages("quantstrat", repos="http://R-Forge.R-project.org")
install.packages('PerformanceAnalytics')
library(PerformanceAnalytics)
table.Drawdowns(ret,top=10)
charts.PerformanceSummary(ret)
system('notepad')
system("notepad++")
system("notepad")
.packages(all.available = T)
data()
dist
head(CO2)
head(CO2,10)
some(CO2)
car.some(CO2)
example(glm)
choose.dir()
x<-NA
x>3
class(x)
is.na(x)
x[!is.na(x)]
x
class(x)
rm(x)
x<-1:10
x
a<-'print(x)'
class(a)
eval(parse(text=a))
x <- array(1:24,2:4)
x
xt <- aperm(x,c(2,1,3))
xt
rm(xt)
sample()
sample(10)
rnorm(100,mean=0,sd=1)
f<-expression(x^2*y+y^2)
D(f,'x')
D(D(f,'x'))
D(D(f,'x'),x)
D(D(f,'x'),'x')
substr('abcdef',2,4)
substring('abcdef',1:6,1:6)
substring('abcdef',1:6,1:5)
substring('abcdef',1:5,1:5)
substring('abcdef',1:5,1:6)
substring('abcdef',1:5,1:9)
gc()
library(quantstrat)
install.packages('FinancialInstrument')
library(quantstrat)
install.packages('foreach')
library(quantstrat)
currency('RMB')
currency()
?currency()
stock('ZSYH',currency="RMB",multiplier = 1)
stock
View(stock)
stock('PFYH',currency="RMB",multiplier = 1)
View(stock)
stock()
?stock()
Sys.setenv(TZ='UTC')
stock('ZSYH',currency="RMB",multiplier = 1)
stock
ZSYH <- getSymbols("600036.ss", from = "2008-01-01", to = Sys.Date(), src = "yahoo", auto.assign = FALSE)
ZSYH <-to.monthly(ZSYH,indexAt = 'endof')
View(ZSYH)
ZSYH$SMA10m<-SMA(Cl(ZSYH),10)
View(ZSYH)
head(ZSYH$SMA10m)
tail(ZSYH$SMA10m)
q.strategy<-'qFaber'
q
q.strategy
initPortf(q.strategy,'ZSYH',initDate='2007-12-31')
initAcct(q.strategy,portfolios = q.strategy,initDate = '2007-12-31',initEq = 1e+06)
initOrders(portfolio = q.strategy,initDate = '2007-12-31')
strategy(q.strategy,store = T)
q
q.strategy
class(q.strategy)
ls(all=T)
strategy<-get
strategy<-getStrategy(q.strategy)
summary(strategy)
add.indicator(strategy=q.strategy,name='SMA',arguments = list(x = quote(Cl(mktdata)),n = 10), label = "SMA10")
add.signal(q.strategy,name='sigCrossover',arguments = list(columns = c('Close','SMA10'),relationship='gt'),label='Cl.gt.SMA')
add.signal(q.strategy,name='sigCrossover',arguments = list(columns = c('Close','SMA10'),relationship='lt'),label='Cl.lt.SMA')
add.rule(q.strategy, name = "ruleSignal", arguments = list(sigcol = "Cl.gt.SMA",sigval = TRUE, orderqty = 900, ordertype = "market", orderside = "long", pricemethod = "market"), type = "enter", path.dep = TRUE)
add.rule(q.strategy, name = "ruleSignal", arguments = list(sigcol = "Cl.lt.SMA", sigval = TRUE, orderqty = "all", ordertype = "market", orderside = "long", pricemethod = "market"), type = "exit", path.dep = TRUE)
summary(q.strategy)
summary(getStrategy(q.strategy))
out<-applyStrategy(strategy=q.strategy,portfolios = q.strategy)
summary(out)
mktdata['2013']
summary(out)
rm(ZSYH)
stock_info_PE
View(stock_info_PE)
filename <- paste(getwd(),'/stock_info/',as.character(stockID),'_full.csv',sep='')
filename
write.csv(stock_info_PE,filename)
?write.csv()
source('dataCleaning.r')
cat(paste(sum(naStatus),'NA processed for stock ',stockID,' !\n\n',sep=''))
source('dataCleaning.r')
stock_info_PE
name
source('dataCleaning.r')
source('dataCleaning.r')
stocks_info_PE <- [,'dataDate']
source('dataCleaning.r')
stocks_info_PE <- read.csv(filename,header=T,stringsAsFactors=F)[,'dataDate']
stocks_info_PE
stocks_info_PE
source('dataCleaning.r')
stocks_info_PE
View(stocks_info_PE)
stocks_info_PE
View(stocks_info_PE)
stock_info_PE[,'PE']
stock_info_PE
source('dataCleaning.r')
View(stocks_info_PE)
colnames(stocks_info_PE) <- c('dataDate',stock_list)
View(stocks_info_PE)
stocks_info_PE
source('dataCleaning.r')
stocks_info_PE <- cbind(stocks_info_PE,stock_info_PE[,'PE'],header=F)
source('dataCleaning.r')
View(stocks_info_PE)
cbind()
?cbind()
?colname()
?colnames()
colnames(stocks_info_PE) <- stockID
colnames(stocks_info_PE[,-1]) <- stockID
length(stocks_info_PE)
ncol(stocks_info_PE)
length(stocks_info_PE[,ncol(stocks_info_PE)])
colnames(stocks_info_PE[,ncol(stocks_info_PE)]) <- stockID
stocks_info_PE[,ncol(stocks_info_PE)]
stocks_info_PE[,ncol(stocks_info_PE)-1]
source('dataCleaning.r')
source('dataCleaning.r')
stocks_info_PE[,ncol(stocks_info_PE)]
colnames(stocks_info_PE[,ncol(stocks_info_PE)]) <- stockID
stocks_info_PE[,ncol(stocks_info_PE)]
View(stocks_info_PE[,ncol(stocks_info_PE)])
View(stocks_info_PE[ncol(stocks_info_PE)])
View(stocks_info_PE)
filename <- paste(getwd(),'/stock_info/',as.character(stockID),'.csv',sep='')
stocks_info_PE <- read.csv(filename,header=T,stringsAsFactors=F)[,'dataDate']
View(stocks_info_PE)
filename <- paste(getwd(),'/stock_info/',as.character(stockID),'.csv',sep='')
stocks_info_PE <- read.csv(filename,header=F,stringsAsFactors=F)[,'dataDate']
filename
read.csv(filename,header=T,stringsAsFactors=F)[,'dataDate']
read.csv(filename,header=F,stringsAsFactors=F)[,'dataDate']
read.csv(filename,header=F,stringsAsFactors=T)[,'dataDate']
filename
read.csv(filename,header=T,stringsAsFactors=F)[,'dataDate']
View(stocks_info_PE)
?names()
names(stocks_info_PE) <- 'Datadate'
View(stocks_info_PE)
View(stocks_info_PE)
source('dataCleaning.r')
stocks_info_PE[,ncol(stocks_info_PE)]
names(stocks_info_PE[ncol(stocks_info_PE)]) <- stockID
View(stocks_info_PE)
names(stocks_info_PE[,ncol(stocks_info_PE)]) <- stockID
View(stocks_info_PE)
?names()
stockID
View(stocks_info_PE)
stocks_info_PE[,ncol(stocks_info_PE)]
names(stocks_info_PE[,ncol(stocks_info_PE)])
names(stocks_info_PE[ncol(stocks_info_PE)])
ncol(stocks_info_PE)
(stocks_info_PE[ncol(stocks_info_PE)])
stocks_info_PE[ncol(stocks_info_PE)]
stocks_info_PE[2]
stocks_info_PE[2,2]
stocks_info_PE[,2]
stocks_info_PE[2,]
stock_info_PE
stocks_info_PE

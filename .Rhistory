#  根据InnerCode索引CompanyCode，在LC_IndicesForValuation表中查询各个EndDate对应的TTM PE值
tempCompanyCode <- filter(SecuMainInfo, InnerCode == tempInnerCode) %>% select(CompanyCode)
sql <- paste("select a.InnerCode,b.CompanyCode,b.InfoPublDate,b.Mark,a.EndDate,a.PE,b.EPS from (LC_IndicesForValuation as a right join LC_MainDataNew as b on a.EndDate = b.EndDate) where a.InnerCode = ", tempInnerCode, " and b.CompanyCode = ", tempCompanyCode, " order by a.EndDate, b.InfoPublDate;", sep='')
tempPEValue <- sqlQuery(myconn, sql)
# 添加一栏MostRecentTradingDate,按照最近交易日值索引当日的ClosePrice,忽略NA行
tempPEValue <- tempPEValue %>% mutate(MostRecentTradingDate = as.character(as.POSIXlt(func_mostRecentTradingDate(EndDate),origin="1970-01-01",tz ="Asia/Taipei")))
function (channel, query, errors = TRUE, ..., rows_at_time)
tempPEValue <- sqlQuery(myconn, sql)
tempPEValue <- sqlQuery(myconn, sql)
myconn
tempPEValue <- sqlQuery(myconn, sql)
myconn <- odbcConnect("JYDB",uid='jianyu.ye',pwd='123456')
tempPEValue <- sqlQuery(myconn, sql)
# 添加一栏MostRecentTradingDate,按照最近交易日值索引当日的ClosePrice,忽略NA行
tempPEValue <- tempPEValue %>% mutate(MostRecentTradingDate = as.character(as.POSIXlt(func_mostRecentTradingDate(EndDate),origin="1970-01-01",tz ="Asia/Taipei")))
View(tempPEValue)
tempPEValue <- tempPEValue %>% mutate(MostRecentTradingDate = as.character(as.POSIXlt(func_mostRecentTradingDate(EndDate),origin="1970-01-01",tz ="Asia/Taipei")))
View(tempPEValue)
source.with.encoding('~/GitHub/PEtest/MostRecentTradingDate.R', encoding='UTF-8')
source('~/GitHub/PEtest/BaseClosePrice.R')
tempPEValue <- tempPEValue %>% mutate(MostRecentTradingDate = as.character(as.POSIXlt(func_mostRecentTradingDate(EndDate),origin="1970-01-01",tz ="Asia/Taipei")))
View(tempPEValue)
tempPEValue <- na.omit(tempPEValue)
View(tempPEValue)
tempBaseClosePrice <- func_BaseClosePrice(tempInnerCode,tempPEValue$MostRecentTradingDate)
View(tempBaseClosePrice)
tempPEValue <- merge(tempPEValue,tempBaseClosePrice) %>% filter(TradingDay == MostRecentTradingDate) %>% select(-(TradingDay))
print(tempPEValue)
nrow(tradingSecuDate)
tradingSecuDate %>% filter(InnerCode ==3)
tradingSecuDate %>% filter(InnerCode ==3) %>% select(TradingDate)
tempTradingDate
tempTradingDate <- tradingSecuDate %>% filter(InnerCode ==3) %>% select(TradingDate)
tempTradingDate
source('~/GitHub/PEtest/PESecuCodeDate.R')
tempPESecuCodeDate <- func_PESecuCodeDate(tempInnerCode,tempTradingDate)
View(tempPEValue)
TradingDate <- tempTradingDate
TradingDate
sql <- paste(TradingDate,collapse = '')
sql
sql <- paste(TradingDate,collapse = ',')
sql <- paste(TradingDate,collapse = ',')
sql
sql <- paste(TradingDate,collapse = "','")
sql
TradingDateList <- tempTradingDate
rm(TradingDate)
TradingDateList <- TradingDate %>% paste(as.character(),collapse = "','") %>% paste("'",.,"'",sep='')
TradingDate <- tempTradingDate
TradingDateList <- TradingDate %>% paste(as.character(),collapse = "','") %>% paste("'",.,"'",sep='')
TradingDateList
tempTradingDate
TradingDate %>% paste(as.character(),collapse = "','")
TradingDate %>% paste(as.character(as.POSIXct()),collapse = "','")
TradingDate %>% paste(as.character(as.POSIXct(.)),collapse = "','")
as.POSIXlt(TradingDate)
TradingDate
class(TradingDate)
TradingDate[1]
TradingDate[2]
TradingDate[1,1]
tradingDateList <- paste(as.character(TradingDate),collapse = "','")
tradingDateList
tradingDateList <- paste(as.character(as.POSIXlt(tempTradingDate,origin="1970-01-01",tz ="Asia/Taipei")),collapse = "','")
class(tempTradingDate)
class(tempTradingDate[1])
class(tempTradingDate[2])
tempTradingDate
nrow(tempTradingDate)
TradingDate
TradingDate[1]
TradingDate[1,1]
TradingDate[2,1]
sql <- paste("select a.InnerCode, a.TradingDay, a.ClosePrice, a.PrevClosePrice from QT_DailyQuote as a where InnerCode = ", InnerCode, " and TradingDay = ",TradingDate[i,1],sep='')
InnerCode <- 3
####
i = 1
sql <- paste("select a.InnerCode, a.TradingDay, a.ClosePrice, a.PrevClosePrice from QT_DailyQuote as a where InnerCode = ", InnerCode, " and TradingDay = ",TradingDate[i,1],sep='')
sql
tempPrevClosePrice <- sqlQuery(myconn,sql)
tempPrevClosePrice
as.POSIXlt(TradingDate[i,1])
class(TradingDate[i,1])
class(TradingDate[1])
as.character((TradingDate[1]))
as.character((TradingDate[1,1]))
source.with.encoding('~/GitHub/PEtest/baseTTMPEValue.R', encoding='UTF-8')
TradingDate
class(TradingDate)
tempBasePE <- func_baseTTMPEValue(InnerCode,TradingDate)
if (!exists('myconn')){
myconn <- odbcConnect("JYDB",uid='jianyu.ye',pwd='123456')
}
####
TradingDate <- tempTradingDate
InnerCode <- 3
####
tempBasePE <- func_baseTTMPEValue(InnerCode,TradingDate)
debugSource('~/GitHub/PEtest/baseTTMPEValue.R', encoding='UTF-8')
debugSource('~/GitHub/PEtest/baseTTMPEValue.R', encoding='UTF-8')
tempBasePE <- func_baseTTMPEValue(InnerCode,TradingDate)
InnerCode <- 3
debugSource('~/GitHub/PEtest/PESecuCodeDate.R')
debugSource('~/GitHub/PEtest/PESecuCodeDate.R')
tempBasePE <- func_baseTTMPEValue(InnerCode,TradingDate)
if (!exists('myconn')){
myconn <- odbcConnect("JYDB",uid='jianyu.ye',pwd='123456')
}
####################tempInnerCode is the test value for InnerCode
tempInnerCode <- InnerCode
tempInnerCode <- 3
####################
#  根据InnerCode索引CompanyCode，在LC_IndicesForValuation表中查询各个EndDate对应的TTM PE值
tempCompanyCode <- filter(SecuMainInfo, InnerCode == tempInnerCode) %>% select(CompanyCode)
sql <- paste("select a.InnerCode,b.CompanyCode,b.InfoPublDate,b.Mark,a.EndDate,a.PE,b.EPS from (LC_IndicesForValuation as a right join LC_MainDataNew as b on a.EndDate = b.EndDate) where a.InnerCode = ", tempInnerCode, " and b.CompanyCode = ", tempCompanyCode, " order by a.EndDate, b.InfoPublDate;", sep='')
tempPEValue <- sqlQuery(myconn, sql)
# 添加一栏MostRecentTradingDate,按照最近交易日值索引当日的ClosePrice,忽略NA行
tempPEValue <- tempPEValue %>% mutate(MostRecentTradingDate = as.character(as.POSIXlt(func_mostRecentTradingDate(EndDate),origin="1970-01-01",tz ="Asia/Taipei")))
tempPEValue
tempPEValue <- sqlQuery(myconn, sql)
tempPEValue
myconn <- odbcConnect("JYDB",uid='jianyu.ye',pwd='123456')
tempPEValue <- sqlQuery(myconn, sql)
tempPEValue
tempBasePE <- func_baseTTMPEValue(InnerCode,TradingDate)
tempBasePE
i = 1
as.POSIXlt(TradingDate[i,1])
TradingDate
as.POSIXlt(TradingDate[i,1],origin="1970-01-01",tz ="Asia/Taipei")
as.POSIXlt(tempBasePE$MostRecentTradingDate,origin="1970-01-01",tz ="Asia/Taipei")
class(tempBasePE$MostRecentTradingDate)
class(TradingDate[1])
tradingSecuDate %>% filter(InnerCode=3) %>% slice(tradingDate)
tradingSecuDate %>% filter(InnerCode==3) %>% slice(tradingDate)
tradingSecuDate %>% filter(InnerCode==3) %>% select(TradingDate)
test <- tradingSecuDate %>% filter(InnerCode==3) %>% select(TradingDate)
class(test)
tradingSecuDate['TradingDAte']
tradingSecuDate['TradingDate']
class(tradingSecuDate['TradingDate'])
class(tradingSecuDate['TradingDate'][1])
tradingSecuDate['TradingDate'][1]
tradingSecuDate['TradingDate'][1,1]
tempTradingDate <- TradingDate
tempTradingdate
tempTradingDate
typeof(tempTradingDate)
typeof(tempTradingDate[1])
typeof(tempTradingDate[1,1])
View(tempTradingDate)
tempTradingDate
as.character(tempTradingDate)
as.character(tempTradingDate$TradingDate)
tempTradingDate$TradingDate[i]
tempTradingDate$TradingDate[2]
sql <- paste("select a.InnerCode, a.TradingDay, a.ClosePrice, a.PrevClosePrice from QT_DailyQuote as a where InnerCode = ", InnerCode, " and TradingDay = ",tempTradingDate$TradingDate[i],sep='')
sql
tempPrevClosePrice <- sqlQuery(myconn,sql)
tempPrevClosePrice
sql <- paste("select a.InnerCode, a.TradingDay, a.ClosePrice, a.PrevClosePrice from QT_DailyQuote as a where InnerCode = ", InnerCode, " and TradingDay = ",as.character(tempTradingDate$TradingDate[i]),sep='')
tempPrevClosePrice <- sqlQuery(myconn,sql)
tempPrevClosePrice
sql
sql <- paste("select a.InnerCode, a.TradingDay, a.ClosePrice, a.PrevClosePrice from QT_DailyQuote as a where InnerCode = ", InnerCode, " and TradingDay = '",as.character(tempTradingDate$TradingDate[i]),"'",sep='')
sql
tempPrevClosePrice <- sqlQuery(myconn,sql)
tempPrevClosePrice
tempTradingDateList <- tempTradingDate %>% paste("'",.,"'",collapse="','")
tempTradingDateList
TradingDate
TradingDate <- tempTradingDate$TradingDate
TradingDate
tempTradingDateList <- TradingDate %>% paste("'",.,"'",collapse="','")
tempTradingDateList
tempTradingDateList <- TradingDate %>% paste("'",.,"'",collapse="','",sep='')
tempTradingDateList
tempTradingDateList <- TradingDate %>% paste("'",.,"'",collapse="",sep='')
tempTradingDateList
tempTradingDateList <- TradingDate %>% paste("'",.,"'",collapse=",",sep='')
tempTradingDateList
setwd()
getwd()
setwd('C:/Users/Jianyu.Ye/Documents/GitHub/PEtest/')
source('QueryFromJYDB.r')
install.packages('lubredate')
install.packages('lubridate')
install.packages("lubridate")
source('QueryFromJYDB.r')
source('QueryFromJYDB.r')
source('QueryFromJYDB.r')
source('QueryFromJYDB.r')
View(tradingSecuDate)
sql <- paste("select a.InnerCode, a.TradingDay, a.ClosePrice, a.PrevClosePrice from QT_DailyQuote as a where InnerCode = ", InnerCode, " and TradingDay = ",tempTradingDateList),sep='')
sql <- paste("select a.InnerCode, a.TradingDay, a.ClosePrice, a.PrevClosePrice from QT_DailyQuote as a where InnerCode = ", InnerCode, " and TradingDay = ",tempTradingDateList,sep='')
sql
sql <- paste("select a.InnerCode, a.TradingDay, a.ClosePrice, a.PrevClosePrice from QT_DailyQuote as a where InnerCode = ", InnerCode, " and TradingDay in(",tempTradingDateList,")",sep='')
sql
sql <- paste("select a.InnerCode, a.TradingDay, a.ClosePrice, a.PrevClosePrice from QT_DailyQuote as a where InnerCode = ", InnerCode, " and TradingDay in (",tempTradingDateList,")",sep='')
tempPrevClosePrice <- sqlQuery(myconn,sql)
tempPrevClosePrice
sql <- paste("select a.InnerCode, a.TradingDay, a.ClosePrice, a.PrevClosePrice from QT_DailyQuote as a where InnerCode = ", InnerCode, " and TradingDay in (",tempTradingDateList,") order by TradingDay",sep='')
tempPrevClosePrice <- sqlQuery(myconn,sql)
tempPrevClosePrice
nrow(tempPEValue)*nrow(tempPrevClosePrice)
temp <- merge(tempPrevClosePrice,tempPEValue)
nrow(temp)
View(temp)
header(temp)
headers(temp)
rownames(temp)
colnames(temp)
temp <- temp %>% group_by(TradingDate) %>% filter(Tradingday > InfoPublDate) >%> arrange(EndDate) %>% slice(1)
temp <- temp %>% group_by(TradingDate) %>% filter(Tradingday > InfoPublDate) %>% arrange(EndDate) %>% slice(1)
temp <- temp %>% group_by(TradingDay) %>% filter(Tradingday > InfoPublDate) %>% arrange(EndDate) %>% slice(1)
temp <- temp %>% group_by(TradingDay) %>% filter(TradingDay > InfoPublDate) %>% arrange(EndDate) %>% slice(1)
temp
nrow(temp)
nrow(tempPrevClosePrice)
View(temp)
temp <- temp %>% group_by(TradingDay) %>% filter(TradingDay > InfoPublDate) %>% arrange(desc(EndDate)) %>% slice(1)
View(temp)
temp <- temp %>% group_by(TradingDay) %>% filter(TradingDay > InfoPublDate) %>% arrange(desc(EndDate))
View(temp)
temp <- temp %>% group_by(TradingDay) %>% filter(TradingDay > InfoPublDate)
View(temp)
View(temp)
View(temp)
nrow(temp)
temp <- merge(tempPrevClosePrice,tempPEValue)
nrow(temp)
View(temp)
temp2 <- temp %>% filter(TradingDay>InfoPublDate)
nrow(temp2)
View(temp2)
temp2 <- temp %>% filter(TradingDay>InfoPublDate) %>% group_by(TradingDay) %>% arrange(desc(EndDate)) %>% slice(1)
temp2
View(temp2)
temp2 <- temp %>% filter(TradingDay>InfoPublDate) %>% group_by(TradingDay) %>% arrange(desc(EndDate),Mark) %>% slice(1)
View(temp2)
View(tempPEValue)
View(tempPrevClosePrice)
source.with.encoding('~/GitHub/PEtest/baseTTMPEValue.R', encoding='UTF-8')
View(tempPEValue)
tempPEValue <- func_baseTTMPEValue(3,1)
require('dplyr')
require('RODBC')
require('dplyr')
require('RODBC')
if (!exists('myconn')){
myconn <- odbcConnect("JYDB",uid='jianyu.ye',pwd='123456')
}
####################tempInnerCode is the test value for InnerCode
tempInnerCode <- InnerCode
tempInnerCode <- 3
####################
#  根据InnerCode索引CompanyCode，在LC_IndicesForValuation表中查询各个EndDate对应的TTM PE值
tempCompanyCode <- filter(SecuMainInfo, InnerCode == tempInnerCode) %>% select(CompanyCode)
sql <- paste("select a.InnerCode,b.CompanyCode,b.InfoPublDate,b.Mark,a.EndDate,a.PE,b.EPS from (LC_IndicesForValuation as a right join LC_MainDataNew as b on a.EndDate = b.EndDate) where a.InnerCode = ", tempInnerCode, " and b.CompanyCode = ", tempCompanyCode, " order by a.EndDate, b.InfoPublDate;", sep='')
tempPEValue <- sqlQuery(myconn, sql)
tempPEValue
myconn <- odbcConnect("JYDB",uid='jianyu.ye',pwd='123456')
tempCompanyCode <- filter(SecuMainInfo, InnerCode == tempInnerCode) %>% select(CompanyCode)
sql <- paste("select a.InnerCode,b.CompanyCode,b.InfoPublDate,b.Mark,a.EndDate,a.PE,b.EPS from (LC_IndicesForValuation as a right join LC_MainDataNew as b on a.EndDate = b.EndDate) where a.InnerCode = ", tempInnerCode, " and b.CompanyCode = ", tempCompanyCode, " order by a.EndDate, b.InfoPublDate;", sep='')
tempPEValue <- sqlQuery(myconn, sql)
# 添加一栏MostRecentTradingDate,按照最近交易日值索引当日的ClosePrice,忽略NA行
tempPEValue <- tempPEValue %>% mutate(MostRecentTradingDate = as.character(as.POSIXlt(func_mostRecentTradingDate(EndDate),origin="1970-01-01",tz ="Asia/Taipei")))
tempPEValue <- na.omit(tempPEValue)
#tempEndDayList <- paste(tempPEValue$EndDate, collapse="','") %>% paste("'",.,"'",sep='')
#sql <- paste("select * from QT_DailyQuote as a where InnerCode = 3 and TradingDay in (",tempEndDayList,")", sep='')
tempBaseClosePrice <- func_BaseClosePrice(tempInnerCode,tempPEValue$MostRecentTradingDate)
#temp <- tempBaseClosePrice %>% transmute(MostRecentTradingDate = as.character(TradingDay),ClosePrice)
tempPEValue <- merge(tempPEValue,tempBaseClosePrice) %>% filter(TradingDay == MostRecentTradingDate) %>% select(-(TradingDay))
tempPEValue
View(tempPEValue)
temp <- merge(tempPrevClosePrice,tempPEValue) %>% filter(TradingDay > InfoPublDate) %>% group_by(TradingDay) %>% arrange(desc(EndDate),Mark) %>% slice(1)
View(temp)
View(tempPrevClosePrice)
temp <- merge(tempPrevClosePrice,tempPEValue)
temp
tempPrevClosePrice
tempPEValue
temp <- merge(tempPrevClosePrice,tempPEValue)
nrow(temp)
temp <- merge(tempPrevClosePrice,tempPEValue, by.x=InnerCode,by.y=InnerCode)
tempBaseClosePrice
tempBaseClosePrice <- rename(tempBaseClosePrice, BaseClosePrice = ClosePrice)
tempBaseClosePrice
tempPEValue <- merge(tempPEValue,tempBaseClosePrice) %>% filter(TradingDay == MostRecentTradingDate) %>% select(-(TradingDay))
tempPEValue
View(tempPEValue)
tempInnerCode <- InnerCode
tempInnerCode <- 3
####################
#  根据InnerCode索引CompanyCode，在LC_IndicesForValuation表中查询各个EndDate对应的TTM PE值
tempCompanyCode <- filter(SecuMainInfo, InnerCode == tempInnerCode) %>% select(CompanyCode)
sql <- paste("select a.InnerCode,b.CompanyCode,b.InfoPublDate,b.Mark,a.EndDate,a.PE,b.EPS from (LC_IndicesForValuation as a right join LC_MainDataNew as b on a.EndDate = b.EndDate) where a.InnerCode = ", tempInnerCode, " and b.CompanyCode = ", tempCompanyCode, " order by a.EndDate, b.InfoPublDate;", sep='')
tempPEValue <- sqlQuery(myconn, sql)
# 添加一栏MostRecentTradingDate,按照最近交易日值索引当日的ClosePrice,忽略NA行
tempPEValue <- tempPEValue %>% mutate(MostRecentTradingDate = as.character(as.POSIXlt(func_mostRecentTradingDate(EndDate),origin="1970-01-01",tz ="Asia/Taipei")))
tempPEValue <- na.omit(tempPEValue)
#tempEndDayList <- paste(tempPEValue$EndDate, collapse="','") %>% paste("'",.,"'",sep='')
#sql <- paste("select * from QT_DailyQuote as a where InnerCode = 3 and TradingDay in (",tempEndDayList,")", sep='')
tempBaseClosePrice <- func_BaseClosePrice(tempInnerCode,tempPEValue$MostRecentTradingDate)
tempBaseClosePrice <- rename(tempBaseClosePrice, BaseClosePrice = ClosePrice)
#temp <- tempBaseClosePrice %>% transmute(MostRecentTradingDate = as.character(TradingDay),ClosePrice)
tempPEValue <- merge(tempPEValue,tempBase
myconn <- odbcConnect("JYDB",uid='jianyu.ye',pwd='123456')
myconn <- odbcConnect("JYDB",uid='jianyu.ye',pwd='123456')
#  根据InnerCode索引CompanyCode，在LC_IndicesForValuation表中查询各个EndDate对应的TTM PE值
tempCompanyCode <- filter(SecuMainInfo, InnerCode == tempInnerCode) %>% select(CompanyCode)
sql <- paste("select a.InnerCode,b.CompanyCode,b.InfoPublDate,b.Mark,a.EndDate,a.PE,b.EPS from (LC_IndicesForValuation as a right join LC_MainDataNew as b on a.EndDate = b.EndDate) where a.InnerCode = ", tempInnerCode, " and b.CompanyCode = ", tempCompanyCode, " order by a.EndDate, b.InfoPublDate;", sep='')
tempPEValue <- sqlQuery(myconn, sql)
# 添加一栏MostRecentTradingDate,按照最近交易日值索引当日的ClosePrice,忽略NA行
tempPEValue <- tempPEValue %>% mutate(MostRecentTradingDate = as.character(as.POSIXlt(func_mostRecentTradingDate(EndDate),origin="1970-01-01",tz ="Asia/Taipei")))
tempPEValue <- na.omit(tempPEValue)
#tempEndDayList <- paste(tempPEValue$EndDate, collapse="','") %>% paste("'",.,"'",sep='')
#sql <- paste("select * from QT_DailyQuote as a where InnerCode = 3 and TradingDay in (",tempEndDayList,")", sep='')
tempBaseClosePrice <- func_BaseClosePrice(tempInnerCode,tempPEValue$MostRecentTradingDate)
tempBaseClosePrice <- rename(tempBaseClosePrice, BaseClosePrice = ClosePrice)
#temp <- tempBaseClosePrice %>% transmute(MostRecentTradingDate = as.character(TradingDay),ClosePrice)
tempPEValue <- merge(tempPEValue,tempBaseClosePrice) %>% filter(TradingDay == MostRecentTradingDate) %>% select(-(TradingDay))
View(tempPEValue)
temp <- merge(tempPrevClosePrice,tempPEValue)
nrow(temp)
temp <- merge(tempPrevClosePrice,tempPEValue) %>% filter(TradingDay > InfoPublDate) %>% group_by(TradingDay) %>% arrange(desc(EndDate),Mark) %>% slice(1)
nrow(temp)
View(temp)
temp <- temp %>% mutate(PEOnTradingDate = PE / BaseClosePrice * PrevClosePrice)
View(temp)
rm(list=all)
ls()
rm(ls())
rm(ls()=all)
rm(ls()=All)
rm(ls())
rm(ls(all=T))
list = ls()
list
rm(list)
rm(list = ls())
library(RODBC)
library(dplyr)
library(lubridate)
library(ggplot2)
library(lubridate)
# Step 0: initiate the odbc connect myconn with the JYDB database. this part should be overwrite on MacOS
if (grep(pattern='Windows', Sys.getenv()['OS'], fixed=T))
{
myconn <- odbcConnect("JYDB",uid='jianyu.ye',pwd='123456')
# test if database is connected
dbSecuMainTable <- sqlQuery(myconn, "select count(name) from sysobjects where xtype='U' and name = 'SecuMain'")
if (1 != dbSecuMainTable){cat("\nDatabase connection error! Process terminated!\n");stop()} else{cat("\nDatabase connected!\n");rm(dbSecuMainTable)}
}
SecurityID <- read.csv("000300cons.csv", header=T, sep=",")[,1]
SecurityID <- paste(substring("000000", 1, (6-nchar(SecurityID))),SecurityID, sep='')
SecurityID <- data.frame(SecurityID)
cat(paste("\nTotally ", nrow(SecurityID)," stocks included!\n", sep=''))
#  Step 1.2: query the database to match the SecurityID with the InnerCode of JYDB database
SecuMainInfo <- sqlQuery(myconn, "select * from JYDB.dbo.SecuMain as a where a.SecuCategory=1")
SecuMainInfo <- merge(SecuMainInfo, SecurityID, by.x="SecuCode", by.y='SecurityID', all.y = T)
SecuMainInfo <- SecuMainInfo[c('SecuCode','InnerCode','CompanyCode')]
startDate <- '2014-06-03'
#  Step 2.1: set the endDate example as current date
endDate <- as.character(Sys.Date())
#  Step 2.3: query for the position time
sql <- "select * from QT_TradingDayNew where SecuMarket = 83 and IfTradingDay = 1 and IfWeekEnd = 1 and TradingDate < GETDATE()"
tradingDate <- sqlQuery(myconn,sql)
tradingDate <- tradingDate[which(tradingDate$TradingDate > startDate & tradingDate$TradingDate < endDate),]
tradingDate <- tradingDate['TradingDate']
tradingSecuDate<-merge(SecuMainInfo,tradingDate, all=T)
#  query for the OpenPrice, ClosePrice
innerCodeList <- paste(SecuMainInfo$InnerCode,collapse = ',')
tradingDateList <- paste(as.character(tradingDate$TradingDate),collapse = "','")
tradingDateList <- paste("'",tradingDateList,"'",sep='')
sql <- paste("select * from JYDB.dbo.QT_DailyQuote where InnerCode in (", innerCodeList, ") and TradingDay in (", tradingDateList,") order by InnerCode", sep='')
tempsqlresult <- sqlQuery(myconn, sql)
tempsqlresult <- tempsqlresult[c('InnerCode','TradingDay','OpenPrice','HighPrice','LowPrice','ClosePrice','PrevClosePrice')]
names(tempsqlresult)[names(tempsqlresult)=="TradingDay"] <- "TradingDate"
tradingSecuDate <- merge(tradingSecuDate, tempsqlresult)
tradingSecuDate <- tradingSecuDate[order(tradingSecuDate$InnerCode,tradingSecuDate$TradingDate),]
temp <- filter(tradingSecuDate, TradingDate == min(TradingDate))
temp <- select(temp, InnerCode, BasePrice = ClosePrice)
tradingSecuDate<- merge(tradingSecuDate,temp)
rm(temp)
#  为tradingSecuDate数据框新增一列Return，值为ClosePrice/BasePrice
tradingSecuDate <- mutate(tradingSecuDate,Return=ClosePrice/BasePrice)
#  为每个计算InnerCode在对应的TradingDate上计算TTM PE值
temp <- tradingSecuDate %>% group_by(InnerCode) %>% mutate(RealPE = func_PESecuCodeDate(InnerCode[1],TradingDate))
source('~/GitHub/PEtest/PESecuCodeDate.R')
temp <- tradingSecuDate %>% group_by(InnerCode) %>% mutate(RealPE = func_PESecuCodeDate(InnerCode[1],TradingDate))
source('~/PESecuCodeDate.R')
source('~/baseTTMPEValue.R')
source('~/PESecuCodeDate.R')
source('~/baseTTMPEValue.R')
source('~/GitHub/PEtest/PESecuCodeDate.R')
source('~/GitHub/PEtest/baseTTMPEValue.R')
source('~/GitHub/PEtest/PESecuCodeDate.R')
source('~/GitHub/PEtest/baseTTMPEValue.R')
source('~/GitHub/PEtest/baseTTMPEValue.R')
# Step 0: initiate the odbc connect myconn with the JYDB database. this part should be overwrite on MacOS
if (grep(pattern='Windows', Sys.getenv()['OS'], fixed=T))
{
myconn <- odbcConnect("JYDB",uid='jianyu.ye',pwd='123456')
# test if database is connected
dbSecuMainTable <- sqlQuery(myconn, "select count(name) from sysobjects where xtype='U' and name = 'SecuMain'")
if (1 != dbSecuMainTable){cat("\nDatabase connection error! Process terminated!\n");stop()} else{cat("\nDatabase connected!\n");rm(dbSecuMainTable)}
}
SecurityID <- read.csv("000300cons.csv", header=T, sep=",")[,1]
SecurityID <- paste(substring("000000", 1, (6-nchar(SecurityID))),SecurityID, sep='')
SecurityID <- data.frame(SecurityID)
cat(paste("\nTotally ", nrow(SecurityID)," stocks included!\n", sep=''))
#  Step 1.2: query the database to match the SecurityID with the InnerCode of JYDB database
SecuMainInfo <- sqlQuery(myconn, "select * from JYDB.dbo.SecuMain as a where a.SecuCategory=1")
SecuMainInfo <- merge(SecuMainInfo, SecurityID, by.x="SecuCode", by.y='SecurityID', all.y = T)
SecuMainInfo <- SecuMainInfo[c('SecuCode','InnerCode','CompanyCode')]
startDate <- '2014-06-03'
#  Step 2.1: set the endDate example as current date
endDate <- as.character(Sys.Date())
#  Step 2.3: query for the position time
sql <- "select * from QT_TradingDayNew where SecuMarket = 83 and IfTradingDay = 1 and IfWeekEnd = 1 and TradingDate < GETDATE()"
tradingDate <- sqlQuery(myconn,sql)
tradingDate <- tradingDate[which(tradingDate$TradingDate > startDate & tradingDate$TradingDate < endDate),]
tradingDate <- tradingDate['TradingDate']
tradingSecuDate<-merge(SecuMainInfo,tradingDate, all=T)
innerCodeList <- paste(SecuMainInfo$InnerCode,collapse = ',')
tradingDateList <- paste(as.character(tradingDate$TradingDate),collapse = "','")
tradingDateList <- paste("'",tradingDateList,"'",sep='')
sql <- paste("select * from JYDB.dbo.QT_DailyQuote where InnerCode in (", innerCodeList, ") and TradingDay in (", tradingDateList,") order by InnerCode", sep='')
tempsqlresult <- sqlQuery(myconn, sql)
tempsqlresult <- tempsqlresult[c('InnerCode','TradingDay','OpenPrice','HighPrice','LowPrice','ClosePrice','PrevClosePrice')]
names(tempsqlresult)[names(tempsqlresult)=="TradingDay"] <- "TradingDate"
tradingSecuDate <- merge(tradingSecuDate, tempsqlresult)
tradingSecuDate <- tradingSecuDate[order(tradingSecuDate$InnerCode,tradingSecuDate$TradingDate),]
temp <- filter(tradingSecuDate, TradingDate == min(TradingDate))
temp <- select(temp, InnerCode, BasePrice = ClosePrice)
tradingSecuDate<- merge(tradingSecuDate,temp)
rm(temp)
#  为tradingSecuDate数据框新增一列Return，值为ClosePrice/BasePrice
tradingSecuDate <- mutate(tradingSecuDate,Return=ClosePrice/BasePrice)
temp <- tradingSecuDate %>% group_by(InnerCode) %>% mutate(RealPE = func_PESecuCodeDate(InnerCode[1],TradingDate))
temp <- tradingSecuDate %>% group_by(InnerCode) %>% mutate(RealPE = func_PESecuCodeDate(InnerCode[1],TradingDate))
myconn <- odbcConnect("JYDB",uid='jianyu.ye',pwd='123456')
temp <- tradingSecuDate %>% group_by(InnerCode) %>% mutate(RealPE = func_PESecuCodeDate(InnerCode[1],TradingDate))
temp <- tradingSecuDate %>% group_by(InnerCode) %>% mutate(RealPE = func_PESecuCodeDate(InnerCode[1],TradingDate))
source('~/GitHub/PEtest/PESecuCodeDate.R')
source('~/GitHub/PEtest/baseTTMPEValue.R')
source('~/GitHub/PEtest/PESecuCodeDate.R')
source('~/GitHub/PEtest/baseTTMPEValue.R')
temp <- tradingSecuDate %>% group_by(InnerCode) %>% mutate(RealPE = func_PESecuCodeDate(InnerCode[1],TradingDate))
temp <- tradingSecuDate %>% group_by(InnerCode) %>% mutate(RealPE = func_PESecuCodeDate(InnerCode[1],TradingDate))
source('~/GitHub/PEtest/PESecuCodeDate.R')
source('~/GitHub/PEtest/baseTTMPEValue.R')
source('~/GitHub/PEtest/PESecuCodeDate.R')
source('~/GitHub/PEtest/baseTTMPEValue.R')
temp <- tradingSecuDate %>% group_by(InnerCode) %>% mutate(RealPE = func_PESecuCodeDate(InnerCode[1],TradingDate))
temp <- tradingSecuDate %>% group_by(InnerCode) %>% mutate(RealPE = func_PESecuCodeDate(InnerCode,TradingDate))
temp <- tradingSecuDate %>% group_by(InnerCode) %>% mutate(RealPE = func_PESecuCodeDate(InnerCode,TradingDate))
temp <- tradingSecuDate %>% group_by(InnerCode)
View(temp)
temp <- temp %>% mutate(RealPE = func_PESecuCodeDate(InnerCode,TradingDate))
class(temp)
temp <- temp %>% ungroup()
class(temp)
InnerCode3temp <- temp[InnerCode ==3 ,]
InnerCode3temp <- temp['InnerCode' ==3 ,]
nrow(InnerCode3temp)
InnerCode3temp <- temp['InnerCode' =3 ,]
InnerCode3temp <- temp[which(temp$InnerCode =3),]
InnerCode3temp <- temp[which(temp$InnerCode == 3),]
InnerCode3temp
func_PESecuCodeDate(InnerCode3temp$InnerCode,InnerCode3temp$TradingDate)
InnerCode3temp %>% mutate(RealPE = func_PESecuCodeDate(InnerCode,TradingDate))
InnerCode3temp <- InnerCode3temp %>% mutate(RealPE = func_PESecuCodeDate(InnerCode,TradingDate))
View(InnerCode3temp)
debugSource('~/GitHub/PEtest/PESecuCodeDate.R')
InnerCode3temp <- InnerCode3temp %>% mutate(RealPE = func_PESecuCodeDate(InnerCode,TradingDate))
View(InnerCode3temp)
debugSource('~/GitHub/PEtest/QueryFromJYDB.r', encoding='UTF-8')
debugSource('~/GitHub/PEtest/QueryFromJYDB.r', encoding='UTF-8')
debugSource('~/GitHub/PEtest/QueryFromJYDB.r', encoding='UTF-8')
n
debugSource('~/GitHub/PEtest/PESecuCodeDate.R')
temp <- temp %>% mutate(RealPE = func_PESecuCodeDate(InnerCode,TradingDate))
temp <- temp %>% mutate(PEOnTradingDate = PE / BaseClosePrice * PrevClosePrice)
temp <- temp %>% mutate(PEOnTradingDate = PE / BaseClosePrice * PrevClosePrice)
temp <- temp %>% mutate(RealPE = func_PESecuCodeDate(InnerCode,TradingDate))
View(temp)
View(temp)
View(temp)
View(temp)
View(temp)
View(temp)
View(tempPrevClosePrice)
View(tempPrevClosePrice)
View(tempBasePE)
View(tempBasePE)
debugSource('~/GitHub/PEtest/QueryFromJYDB.r', encoding='UTF-8')
View(temp)
source.with.encoding('~/GitHub/PEtest/QueryFromJYDB.r', encoding='UTF-8')
debugSource('~/GitHub/PEtest/QueryFromJYDB.r', encoding='UTF-8')
View(tradingSecuDate)
View(tradingSecuDate)
View(SecuMainInfo)
View(tradingSecuDate)
View(tradingSecuDate)
View(tradingSecuDate)
View(tradingSecuDate)
View(BasketReturnDate)
View(BasketReturnDate)
debugSource('~/GitHub/PEtest/QueryFromJYDB.r', encoding='UTF-8')
